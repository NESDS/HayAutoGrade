#!/usr/bin/env python3
import pandas as pd
import sqlite3
import os

def update_conflicts():
    try:
        print("üìã –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–∑ Excel...")
        # –ß–∏—Ç–∞–µ–º –ª–∏—Å—Ç —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏
        df = pd.read_excel('data/hag.xlsx', sheet_name='conflicts')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏: {len(df)}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        with sqlite3.connect('data/database.db') as conn:
            cursor = conn.cursor()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS conflicts (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    question1_id INTEGER NOT NULL,
                    answer1_id INTEGER NOT NULL, 
                    question1_text TEXT NOT NULL,
                    answer1_text TEXT NOT NULL,
                    question2_id INTEGER NOT NULL,
                    answer2_id INTEGER NOT NULL,
                    question2_text TEXT NOT NULL,
                    answer2_text TEXT NOT NULL,
                    question3_id INTEGER,
                    answer3_id INTEGER,
                    question3_text TEXT,
                    answer3_text TEXT
                )
            """)
            
            # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            cursor.execute("DELETE FROM conflicts")
            print("üóëÔ∏è –û—á–∏—Å—Ç–∏–ª–∏ —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã")
            
            # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ
            conflicts_added = 0
            for _, row in df.iterrows():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å (–∫–æ–ª–æ–Ω–∫–∞ 8 = –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ 3)
                has_third = pd.notna(row.iloc[8])
                
                if has_third:
                    # –ö–æ–Ω—Ñ–ª–∏–∫—Ç –∏–∑ 3 –≤–æ–ø—Ä–æ—Å–æ–≤
                    cursor.execute("""
                        INSERT INTO conflicts (
                            question1_id, answer1_id, question1_text, answer1_text,
                            question2_id, answer2_id, question2_text, answer2_text,
                            question3_id, answer3_id, question3_text, answer3_text
                        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                    """, (
                        int(row.iloc[0]), int(row.iloc[2]), str(row.iloc[1]), str(row.iloc[3]),  # –≤–æ–ø—Ä–æ—Å 1
                        int(row.iloc[4]), int(row.iloc[6]), str(row.iloc[5]), str(row.iloc[7]),  # –≤–æ–ø—Ä–æ—Å 2  
                        int(row.iloc[8]), int(row.iloc[10]), str(row.iloc[9]), str(row.iloc[11]) # –≤–æ–ø—Ä–æ—Å 3
                    ))
                    conflicts_added += 1
                else:
                    # –ö–æ–Ω—Ñ–ª–∏–∫—Ç –∏–∑ 2 –≤–æ–ø—Ä–æ—Å–æ–≤
                    cursor.execute("""
                        INSERT INTO conflicts (
                            question1_id, answer1_id, question1_text, answer1_text,
                            question2_id, answer2_id, question2_text, answer2_text
                        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                    """, (
                        int(row.iloc[0]), int(row.iloc[2]), str(row.iloc[1]), str(row.iloc[3]),  # –≤–æ–ø—Ä–æ—Å 1
                        int(row.iloc[4]), int(row.iloc[6]), str(row.iloc[5]), str(row.iloc[7])   # –≤–æ–ø—Ä–æ—Å 2
                    ))
                    conflicts_added += 1
            
            conn.commit()
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {conflicts_added} –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            cursor.execute("SELECT COUNT(*) FROM conflicts")
            count = cursor.fetchone()[0]
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤ —Ç–∞–±–ª–∏—Ü–µ conflicts {count} –∑–∞–ø–∏—Å–µ–π")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    update_conflicts()