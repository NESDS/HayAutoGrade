#!/usr/bin/env python3
import pandas as pd
import sqlite3
import os

def update_conflicts():
    try:
        print("üìã –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–∑ Excel...")
        # –ß–∏—Ç–∞–µ–º –ª–∏—Å—Ç —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏
        df = pd.read_excel('data/hag.xlsx', sheet_name='conflicts')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏: {len(df)}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        with sqlite3.connect('data/database.db') as conn:
            cursor = conn.cursor()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS conflicts (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    question1_id INTEGER NOT NULL,
                    answer1_id INTEGER NOT NULL, 
                    question1_text TEXT NOT NULL,
                    answer1_text TEXT NOT NULL,
                    question2_id INTEGER NOT NULL,
                    answer2_id INTEGER NOT NULL,
                    question2_text TEXT NOT NULL,
                    answer2_text TEXT NOT NULL,
                    question3_id INTEGER,
                    answer3_id INTEGER,
                    question3_text TEXT,
                    answer3_text TEXT,
                    question4_id INTEGER,
                    answer4_id INTEGER,
                    question4_text TEXT,
                    answer4_text TEXT,
                    question5_id INTEGER,
                    answer5_id INTEGER,
                    question5_text TEXT,
                    answer5_text TEXT
                )
            """)
            
            # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            cursor.execute("DELETE FROM conflicts")
            print("üóëÔ∏è –û—á–∏—Å—Ç–∏–ª–∏ —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã")
            
            # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ
            conflicts_added = 0
            for _, row in df.iterrows():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –µ—Å—Ç—å –≤ —Å—Ç—Ä–æ–∫–µ
                has_third = pd.notna(row.iloc[8]) if len(row) > 8 else False
                has_fourth = pd.notna(row.iloc[12]) if len(row) > 12 else False
                has_fifth = pd.notna(row.iloc[16]) if len(row) > 16 else False
                
                # –ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è INSERT
                values = [
                    int(row.iloc[0]), int(row.iloc[2]), str(row.iloc[1]), str(row.iloc[3]),  # –≤–æ–ø—Ä–æ—Å 1
                    int(row.iloc[4]), int(row.iloc[6]), str(row.iloc[5]), str(row.iloc[7])   # –≤–æ–ø—Ä–æ—Å 2
                ]
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
                if has_third:
                    values.extend([
                        int(row.iloc[8]), int(row.iloc[10]), str(row.iloc[9]), str(row.iloc[11])  # –≤–æ–ø—Ä–æ—Å 3
                    ])
                else:
                    values.extend([None, None, None, None])
                
                # –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å
                if has_fourth:
                    values.extend([
                        int(row.iloc[12]), int(row.iloc[14]), str(row.iloc[13]), str(row.iloc[15])  # –≤–æ–ø—Ä–æ—Å 4
                    ])
                else:
                    values.extend([None, None, None, None])
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å
                if has_fifth:
                    values.extend([
                        int(row.iloc[16]), int(row.iloc[18]), str(row.iloc[17]), str(row.iloc[19])  # –≤–æ–ø—Ä–æ—Å 5
                    ])
                else:
                    values.extend([None, None, None, None])
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                cursor.execute("""
                    INSERT INTO conflicts (
                        question1_id, answer1_id, question1_text, answer1_text,
                        question2_id, answer2_id, question2_text, answer2_text,
                        question3_id, answer3_id, question3_text, answer3_text,
                        question4_id, answer4_id, question4_text, answer4_text,
                        question5_id, answer5_id, question5_text, answer5_text
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, values)
                conflicts_added += 1
            
            conn.commit()
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {conflicts_added} –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            cursor.execute("SELECT COUNT(*) FROM conflicts")
            count = cursor.fetchone()[0]
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤ —Ç–∞–±–ª–∏—Ü–µ conflicts {count} –∑–∞–ø–∏—Å–µ–π")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    update_conflicts()